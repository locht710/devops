# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run:
          name: Install GO
          command: |
            wget https://dl.google.com/go/go1.12.2.linux-amd64.tar.gz
            sudo tar -xvf go1.12.2.linux-amd64.tar.gz
            sudo mv go /usr/local/

      - run:
          name: Install amazon-ecr-credential-helper
          command: |
            export GOPATH=$HOME/work
            export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
            go get -u github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn test
      - run:
          name: Build and Deploy images
          command: |
            export GOPATH=$HOME/work
            export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
            mvn jib:build